/*
*
* Micah Loffer <micah.loffer@protonmail.com>
*
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

// Layer aliases
#define DEFAULT 0
#define SYM 1
#define FUN 2
#define NUM 3

//  0  1  2  3  4  5     6  7  8  9 10 11
// 12 13 14 15 16 17    18 19 20 21 22 23
// 24 25 26 27 28 29    30 31 32 33 34 35
//          36 37 38    39 40 41
#define LEFT_HAND <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29>
#define RIGHT_HAND <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35>

//&lt {
//    flavor = "balanced";
//    tapping-term-ms = <300>;
//    quick_tap_ms = <200>;
//};

// todo: find out why this doesn't stick after moving to a layer (e.g. _)
&caps_word {
    continue-list = <UNDERSCORE MINUS>;
};

/ {
        behaviors {
            hm: homerow_mods {
                compatible = "zmk,behavior-hold-tap";
                label = "HOMEROW_MODS";
                #binding-cells = <2>;
                tapping-term-ms = <200>;
                quick_tap_ms = <200>;
                flavor = "tap-preferred";
                bindings = <&kp>, <&kp>;
            };

            // allow locking layer with shift
            sym: symbol_layer {
                compatible = "zmk,behavior-mod-morph";
                label = "SYMBOL_LAYER";
                #binding-cells = <0>;
                // Mod morph doesn't seem to support bindings?
                bindings = <&mo SYM>, <&to SYM>;
                mods = <(MOD_LALT|MOD_RALT)>;
            };
            fun: function_layer {
                compatible = "zmk,behavior-mod-morph";
                label = "FUNCTION_LAYER";
                #binding-cells = <0>;
                bindings = <&mo FUN>, <&to FUN>;
                mods = <(MOD_LALT|MOD_RALT)>;
            };
            num: numpad_layer {
                compatible = "zmk,behavior-mod-morph";
                label = "NUMPAD_LAYER";
                #binding-cells = <0>;
                bindings = <&mo NUM>, <&to NUM>;
                mods = <(MOD_LALT|MOD_RALT)>;
            };
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        label = "Workman";
// -----------------------------------------------------------------------------------------
// | ESC  |  Q  |  D  |  R  |  W  |  B  |    |  J  |  F  |  U  |  P  |  '  | DEL |
// | TAB  |  A  |  S  |  H  |  T  |  G  |    |  Y  |  N  |  E  |  O  |  I  | RET |
// | CAPS |  Z  |  X  |  M  |  C  |  V  |    |  K  |  L  |  ,  |  .  |  /  | APP |
    //                | NUM | SYM | RET |    | SPC | FUN | BSPC |
                        bindings = <
   &kp ESC    &kp Q &kp D &kp R &kp W &kp B                          &kp J &kp F  &kp U     &kp P   &kp SQT &kp DEL
   &kp TAB    &hm LGUI A &hm LALT S &hm LCTRL H &hm LSHFT T &kp G    &kp Y &hm RSHFT N  &hm RCTRL E &hm RALT O &hm RGUI I &kp RET
   &caps_word &kp Z &kp X &kp M &kp C &kp V                          &kp K &kp L  &kp COMMA &kp DOT &kp FSLH &kp K_APP
                                    &num &sym &kp RET         &kp SPACE &fun &kp BSPC
                        >;
                };
                symbol_layer {
                        label = "Symbol";
// -----------------------------------------------------------------------------------------
// | ESC  | ~ | # | * | [ | ] |    | \ |  !  |  `  |  "  | ' | DEL |
// | TAB  | $ | | | = | ( | ) |    | . |  _  |  :  |  ;  | + | RET |
// | CAPS | ^ | % | @ | { | } |    | & |  -  |  <  |  >  | ? | APP |
//          | NUM | SYM | RET |    | SPC | FUN | BSPC |
                        bindings = <
   &trans &kp TILDE &kp HASH  &kp ASTRK &kp LBKT &kp RBKT                           &kp BSLH &kp EXCL        &kp GRAVE       &kp DQT &trans  &trans
   &trans &hm LGUI DLLR &hm LALT PIPE &hm LCTRL EQUAL &hm LSHFT LPAR &kp RPAR       &kp DOT &hm RSHFT UNDER &hm RCTRL COLON &hm RALT SEMI &hm RGUI PLUS &trans
   &trans &kp CARET &kp PRCNT &kp AT    &kp LBRC &kp RBRC                           &kp AMPS &kp MINUS        &kp LT          &kp GT  &kp QMARK &trans
                                                        &trans    &trans &trans     &trans &trans &trans
                        >;
                };

                function_layer {
                        label = "Function";
// -----------------------------------------------------------------------------------------
// | ESC  | F9 | F10 | F11 | F12 | NEXT |    | VOLUP | PGUP |  UP  |  PGDN  |     | DEL |
// | TAB  | F5 | F6  | F7  | F8  | PP   |    | MUTE  | LEFT |  DN  |  RIGHT | GUI | RET |
// | CAPS | F1 | F2  | F3  | F4  | PREV |    | VOLDN | HOME |      |  END   |     | APP |
//                    | NUM | SYM | RET |    | SPC | FUN | BSPC |
                        bindings = <
   &trans   &kp F9 &kp F10 &kp F11 &kp F12 &kp C_NEXT                        &kp C_VOL_UP &kp PG_UP &kp UP   &kp PG_DN &none &trans
   &trans   &hm LGUI F5 &hm LALT F6 &hm LCTRL F7 &hm LSHFT F8  &kp C_PP      &kp C_MUTE   &hm RSHFT LEFT &hm RCTRL DOWN &hm RALT RIGHT &kp RGUI &trans
   &kp CAPS &kp F1 &kp F2  &kp F3  &kp F4  &kp C_PREV                        &kp C_VOL_DN &kp HOME  &none    &kp END   &none &trans
                                                   &trans &trans   &trans    &trans   &trans  &trans
                        >;
                };

                numpad_layer {
                    label = "Numpad";
// -----------------------------------------------------------------------------------------
// |BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |    |   |  7  |  8  |  9  | - | DEL |
// | TAB | GUI | ALT |CTRL |SHFT |     |    | . |  4  |  5  |  6  | + | RET |
// |CAPS | RST |BOOT | OUT |     |     |    | * |  1  |  2  |  3  | / | APP |
//                   | NUM | SYM | RET |    | 0 | FUN |BSPC |
                    bindings = <
    &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4      &none    &kp N7 &kp N8 &kp N9 &kp MINUS &trans
    &trans &kp LGUI &kp LALT &kp LCTRL &kp LSHFT &none                               &kp DOT  &kp N4 &kp N5 &kp N6 &kp PLUS  &trans
    &trans &reset &bootloader &out OUT_TOG     &none     &none                       &kp STAR &kp N1 &kp N2 &kp N3 &trans    &trans
                               &trans    &trans &trans                               &kp KP_N0 &trans &trans
                    >;
                };

        };
};
